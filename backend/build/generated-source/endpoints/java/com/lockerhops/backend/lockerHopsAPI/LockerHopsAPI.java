/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-02-18 22:11:37 UTC)
 * on 2016-03-18 at 19:08:08 UTC 
 * Modify at your own risk.
 */

package com.lockerhops.backend.lockerHopsAPI;

/**
 * Service definition for LockerHopsAPI (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link LockerHopsAPIRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class LockerHopsAPI extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.21.0 of the lockerHopsAPI library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://myApplicationId.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "lockerHopsAPI/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public LockerHopsAPI(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  LockerHopsAPI(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Item collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code LockerHopsAPI lockerHopsAPI = new LockerHopsAPI(...);}
   *   {@code LockerHopsAPI.Item.List request = lockerHopsAPI.item().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Item item() {
    return new Item();
  }

  /**
   * The "item" collection of methods.
   */
  public class Item {

    /**
     * Create a request for the method "item.addRestaurantItem".
     *
     * This request holds the parameters needed by the lockerHopsAPI server.  After setting any optional
     * parameters, call the {@link AddRestaurantItem#execute()} method to invoke the remote operation.
     *
     * @param restaurant
     * @param item
     * @param description
     * @param cost
     * @param category
     * @param subCategory
     * @return the request
     */
    public AddRestaurantItem addRestaurantItem(java.lang.String restaurant, java.lang.String item, java.lang.String description, java.lang.Double cost, java.lang.String category, java.lang.String subCategory) throws java.io.IOException {
      AddRestaurantItem result = new AddRestaurantItem(restaurant, item, description, cost, category, subCategory);
      initialize(result);
      return result;
    }

    public class AddRestaurantItem extends LockerHopsAPIRequest<com.lockerhops.backend.lockerHopsAPI.model.MyBean> {

      private static final String REST_PATH = "addRestaurantItem/{restaurant}/{item}/{description}/{cost}/{category}/{subCategory}";

      /**
       * Create a request for the method "item.addRestaurantItem".
       *
       * This request holds the parameters needed by the the lockerHopsAPI server.  After setting any
       * optional parameters, call the {@link AddRestaurantItem#execute()} method to invoke the remote
       * operation. <p> {@link AddRestaurantItem#initialize(com.google.api.client.googleapis.services.Ab
       * stractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param restaurant
       * @param item
       * @param description
       * @param cost
       * @param category
       * @param subCategory
       * @since 1.13
       */
      protected AddRestaurantItem(java.lang.String restaurant, java.lang.String item, java.lang.String description, java.lang.Double cost, java.lang.String category, java.lang.String subCategory) {
        super(LockerHopsAPI.this, "POST", REST_PATH, null, com.lockerhops.backend.lockerHopsAPI.model.MyBean.class);
        this.restaurant = com.google.api.client.util.Preconditions.checkNotNull(restaurant, "Required parameter restaurant must be specified.");
        this.item = com.google.api.client.util.Preconditions.checkNotNull(item, "Required parameter item must be specified.");
        this.description = com.google.api.client.util.Preconditions.checkNotNull(description, "Required parameter description must be specified.");
        this.cost = com.google.api.client.util.Preconditions.checkNotNull(cost, "Required parameter cost must be specified.");
        this.category = com.google.api.client.util.Preconditions.checkNotNull(category, "Required parameter category must be specified.");
        this.subCategory = com.google.api.client.util.Preconditions.checkNotNull(subCategory, "Required parameter subCategory must be specified.");
      }

      @Override
      public AddRestaurantItem setAlt(java.lang.String alt) {
        return (AddRestaurantItem) super.setAlt(alt);
      }

      @Override
      public AddRestaurantItem setFields(java.lang.String fields) {
        return (AddRestaurantItem) super.setFields(fields);
      }

      @Override
      public AddRestaurantItem setKey(java.lang.String key) {
        return (AddRestaurantItem) super.setKey(key);
      }

      @Override
      public AddRestaurantItem setOauthToken(java.lang.String oauthToken) {
        return (AddRestaurantItem) super.setOauthToken(oauthToken);
      }

      @Override
      public AddRestaurantItem setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddRestaurantItem) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddRestaurantItem setQuotaUser(java.lang.String quotaUser) {
        return (AddRestaurantItem) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddRestaurantItem setUserIp(java.lang.String userIp) {
        return (AddRestaurantItem) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String restaurant;

      /**

       */
      public java.lang.String getRestaurant() {
        return restaurant;
      }

      public AddRestaurantItem setRestaurant(java.lang.String restaurant) {
        this.restaurant = restaurant;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String item;

      /**

       */
      public java.lang.String getItem() {
        return item;
      }

      public AddRestaurantItem setItem(java.lang.String item) {
        this.item = item;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String description;

      /**

       */
      public java.lang.String getDescription() {
        return description;
      }

      public AddRestaurantItem setDescription(java.lang.String description) {
        this.description = description;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double cost;

      /**

       */
      public java.lang.Double getCost() {
        return cost;
      }

      public AddRestaurantItem setCost(java.lang.Double cost) {
        this.cost = cost;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String category;

      /**

       */
      public java.lang.String getCategory() {
        return category;
      }

      public AddRestaurantItem setCategory(java.lang.String category) {
        this.category = category;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String subCategory;

      /**

       */
      public java.lang.String getSubCategory() {
        return subCategory;
      }

      public AddRestaurantItem setSubCategory(java.lang.String subCategory) {
        this.subCategory = subCategory;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isVegetarian;

      /**

       */
      public java.lang.Boolean getIsVegetarian() {
        return isVegetarian;
      }

      public AddRestaurantItem setIsVegetarian(java.lang.Boolean isVegetarian) {
        this.isVegetarian = isVegetarian;
        return this;
      }

      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> ingredients;

      /**

       */
      public java.util.List<java.lang.String> getIngredients() {
        return ingredients;
      }

      public AddRestaurantItem setIngredients(java.util.List<java.lang.String> ingredients) {
        this.ingredients = ingredients;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isVegan;

      /**

       */
      public java.lang.Boolean getIsVegan() {
        return isVegan;
      }

      public AddRestaurantItem setIsVegan(java.lang.Boolean isVegan) {
        this.isVegan = isVegan;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isGlutenFree;

      /**

       */
      public java.lang.Boolean getIsGlutenFree() {
        return isGlutenFree;
      }

      public AddRestaurantItem setIsGlutenFree(java.lang.Boolean isGlutenFree) {
        this.isGlutenFree = isGlutenFree;
        return this;
      }

      @Override
      public AddRestaurantItem set(String parameterName, Object value) {
        return (AddRestaurantItem) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "item.getRestaurantItems".
     *
     * This request holds the parameters needed by the lockerHopsAPI server.  After setting any optional
     * parameters, call the {@link GetRestaurantItems#execute()} method to invoke the remote operation.
     *
     * @param restaurant
     * @return the request
     */
    public GetRestaurantItems getRestaurantItems(java.lang.String restaurant) throws java.io.IOException {
      GetRestaurantItems result = new GetRestaurantItems(restaurant);
      initialize(result);
      return result;
    }

    public class GetRestaurantItems extends LockerHopsAPIRequest<com.lockerhops.backend.lockerHopsAPI.model.ItemCollection> {

      private static final String REST_PATH = "itemcollection/{restaurant}";

      /**
       * Create a request for the method "item.getRestaurantItems".
       *
       * This request holds the parameters needed by the the lockerHopsAPI server.  After setting any
       * optional parameters, call the {@link GetRestaurantItems#execute()} method to invoke the remote
       * operation. <p> {@link GetRestaurantItems#initialize(com.google.api.client.googleapis.services.A
       * bstractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param restaurant
       * @since 1.13
       */
      protected GetRestaurantItems(java.lang.String restaurant) {
        super(LockerHopsAPI.this, "GET", REST_PATH, null, com.lockerhops.backend.lockerHopsAPI.model.ItemCollection.class);
        this.restaurant = com.google.api.client.util.Preconditions.checkNotNull(restaurant, "Required parameter restaurant must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetRestaurantItems setAlt(java.lang.String alt) {
        return (GetRestaurantItems) super.setAlt(alt);
      }

      @Override
      public GetRestaurantItems setFields(java.lang.String fields) {
        return (GetRestaurantItems) super.setFields(fields);
      }

      @Override
      public GetRestaurantItems setKey(java.lang.String key) {
        return (GetRestaurantItems) super.setKey(key);
      }

      @Override
      public GetRestaurantItems setOauthToken(java.lang.String oauthToken) {
        return (GetRestaurantItems) super.setOauthToken(oauthToken);
      }

      @Override
      public GetRestaurantItems setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetRestaurantItems) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetRestaurantItems setQuotaUser(java.lang.String quotaUser) {
        return (GetRestaurantItems) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetRestaurantItems setUserIp(java.lang.String userIp) {
        return (GetRestaurantItems) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String restaurant;

      /**

       */
      public java.lang.String getRestaurant() {
        return restaurant;
      }

      public GetRestaurantItems setRestaurant(java.lang.String restaurant) {
        this.restaurant = restaurant;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String category;

      /**

       */
      public java.lang.String getCategory() {
        return category;
      }

      public GetRestaurantItems setCategory(java.lang.String category) {
        this.category = category;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isVegetarian;

      /**

       */
      public java.lang.Boolean getIsVegetarian() {
        return isVegetarian;
      }

      public GetRestaurantItems setIsVegetarian(java.lang.Boolean isVegetarian) {
        this.isVegetarian = isVegetarian;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String description;

      /**

       */
      public java.lang.String getDescription() {
        return description;
      }

      public GetRestaurantItems setDescription(java.lang.String description) {
        this.description = description;
        return this;
      }

      @com.google.api.client.util.Key
      private java.util.List<java.lang.String> ingredients;

      /**

       */
      public java.util.List<java.lang.String> getIngredients() {
        return ingredients;
      }

      public GetRestaurantItems setIngredients(java.util.List<java.lang.String> ingredients) {
        this.ingredients = ingredients;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String item;

      /**

       */
      public java.lang.String getItem() {
        return item;
      }

      public GetRestaurantItems setItem(java.lang.String item) {
        this.item = item;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double cost;

      /**

       */
      public java.lang.Double getCost() {
        return cost;
      }

      public GetRestaurantItems setCost(java.lang.Double cost) {
        this.cost = cost;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isVegan;

      /**

       */
      public java.lang.Boolean getIsVegan() {
        return isVegan;
      }

      public GetRestaurantItems setIsVegan(java.lang.Boolean isVegan) {
        this.isVegan = isVegan;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Boolean isGlutenFree;

      /**

       */
      public java.lang.Boolean getIsGlutenFree() {
        return isGlutenFree;
      }

      public GetRestaurantItems setIsGlutenFree(java.lang.Boolean isGlutenFree) {
        this.isGlutenFree = isGlutenFree;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String subCategory;

      /**

       */
      public java.lang.String getSubCategory() {
        return subCategory;
      }

      public GetRestaurantItems setSubCategory(java.lang.String subCategory) {
        this.subCategory = subCategory;
        return this;
      }

      @Override
      public GetRestaurantItems set(String parameterName, Object value) {
        return (GetRestaurantItems) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Order collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code LockerHopsAPI lockerHopsAPI = new LockerHopsAPI(...);}
   *   {@code LockerHopsAPI.Order.List request = lockerHopsAPI.order().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Order order() {
    return new Order();
  }

  /**
   * The "order" collection of methods.
   */
  public class Order {

    /**
     * Create a request for the method "order.getOrders".
     *
     * This request holds the parameters needed by the lockerHopsAPI server.  After setting any optional
     * parameters, call the {@link GetOrders#execute()} method to invoke the remote operation.
     *
     * @param restaurant
     * @return the request
     */
    public GetOrders getOrders(java.lang.String restaurant) throws java.io.IOException {
      GetOrders result = new GetOrders(restaurant);
      initialize(result);
      return result;
    }

    public class GetOrders extends LockerHopsAPIRequest<com.lockerhops.backend.lockerHopsAPI.model.OrderCollection> {

      private static final String REST_PATH = "ordercollection/{Restaurant}";

      /**
       * Create a request for the method "order.getOrders".
       *
       * This request holds the parameters needed by the the lockerHopsAPI server.  After setting any
       * optional parameters, call the {@link GetOrders#execute()} method to invoke the remote
       * operation. <p> {@link
       * GetOrders#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param restaurant
       * @since 1.13
       */
      protected GetOrders(java.lang.String restaurant) {
        super(LockerHopsAPI.this, "GET", REST_PATH, null, com.lockerhops.backend.lockerHopsAPI.model.OrderCollection.class);
        this.restaurant = com.google.api.client.util.Preconditions.checkNotNull(restaurant, "Required parameter restaurant must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetOrders setAlt(java.lang.String alt) {
        return (GetOrders) super.setAlt(alt);
      }

      @Override
      public GetOrders setFields(java.lang.String fields) {
        return (GetOrders) super.setFields(fields);
      }

      @Override
      public GetOrders setKey(java.lang.String key) {
        return (GetOrders) super.setKey(key);
      }

      @Override
      public GetOrders setOauthToken(java.lang.String oauthToken) {
        return (GetOrders) super.setOauthToken(oauthToken);
      }

      @Override
      public GetOrders setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetOrders) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetOrders setQuotaUser(java.lang.String quotaUser) {
        return (GetOrders) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetOrders setUserIp(java.lang.String userIp) {
        return (GetOrders) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("Restaurant")
      private java.lang.String restaurant;

      /**

       */
      public java.lang.String getRestaurant() {
        return restaurant;
      }

      public GetOrders setRestaurant(java.lang.String restaurant) {
        this.restaurant = restaurant;
        return this;
      }

      @Override
      public GetOrders set(String parameterName, Object value) {
        return (GetOrders) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "order.placeOrder".
     *
     * This request holds the parameters needed by the lockerHopsAPI server.  After setting any optional
     * parameters, call the {@link PlaceOrder#execute()} method to invoke the remote operation.
     *
     * @param id
     * @param restaurant
     * @param items
     * @param cost
     * @return the request
     */
    public PlaceOrder placeOrder(java.lang.Integer id, java.lang.String restaurant, java.util.List<java.lang.Integer> items, java.lang.Double cost) throws java.io.IOException {
      PlaceOrder result = new PlaceOrder(id, restaurant, items, cost);
      initialize(result);
      return result;
    }

    public class PlaceOrder extends LockerHopsAPIRequest<com.lockerhops.backend.lockerHopsAPI.model.MyBean> {

      private static final String REST_PATH = "placeOrder/{id}/{restaurant}/{items}/{cost}";

      /**
       * Create a request for the method "order.placeOrder".
       *
       * This request holds the parameters needed by the the lockerHopsAPI server.  After setting any
       * optional parameters, call the {@link PlaceOrder#execute()} method to invoke the remote
       * operation. <p> {@link
       * PlaceOrder#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param id
       * @param restaurant
       * @param items
       * @param cost
       * @since 1.13
       */
      protected PlaceOrder(java.lang.Integer id, java.lang.String restaurant, java.util.List<java.lang.Integer> items, java.lang.Double cost) {
        super(LockerHopsAPI.this, "GET", REST_PATH, null, com.lockerhops.backend.lockerHopsAPI.model.MyBean.class);
        this.id = com.google.api.client.util.Preconditions.checkNotNull(id, "Required parameter id must be specified.");
        this.restaurant = com.google.api.client.util.Preconditions.checkNotNull(restaurant, "Required parameter restaurant must be specified.");
        this.items = com.google.api.client.util.Preconditions.checkNotNull(items, "Required parameter items must be specified.");
        this.cost = com.google.api.client.util.Preconditions.checkNotNull(cost, "Required parameter cost must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public PlaceOrder setAlt(java.lang.String alt) {
        return (PlaceOrder) super.setAlt(alt);
      }

      @Override
      public PlaceOrder setFields(java.lang.String fields) {
        return (PlaceOrder) super.setFields(fields);
      }

      @Override
      public PlaceOrder setKey(java.lang.String key) {
        return (PlaceOrder) super.setKey(key);
      }

      @Override
      public PlaceOrder setOauthToken(java.lang.String oauthToken) {
        return (PlaceOrder) super.setOauthToken(oauthToken);
      }

      @Override
      public PlaceOrder setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (PlaceOrder) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public PlaceOrder setQuotaUser(java.lang.String quotaUser) {
        return (PlaceOrder) super.setQuotaUser(quotaUser);
      }

      @Override
      public PlaceOrder setUserIp(java.lang.String userIp) {
        return (PlaceOrder) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer id;

      /**

       */
      public java.lang.Integer getId() {
        return id;
      }

      public PlaceOrder setId(java.lang.Integer id) {
        this.id = id;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String restaurant;

      /**

       */
      public java.lang.String getRestaurant() {
        return restaurant;
      }

      public PlaceOrder setRestaurant(java.lang.String restaurant) {
        this.restaurant = restaurant;
        return this;
      }

      @com.google.api.client.util.Key
      private java.util.List<java.lang.Integer> items;

      /**

       */
      public java.util.List<java.lang.Integer> getItems() {
        return items;
      }

      public PlaceOrder setItems(java.util.List<java.lang.Integer> items) {
        this.items = items;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.Double cost;

      /**

       */
      public java.lang.Double getCost() {
        return cost;
      }

      public PlaceOrder setCost(java.lang.Double cost) {
        this.cost = cost;
        return this;
      }

      @Override
      public PlaceOrder set(String parameterName, Object value) {
        return (PlaceOrder) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "order.updatePickupTime".
     *
     * This request holds the parameters needed by the lockerHopsAPI server.  After setting any optional
     * parameters, call the {@link UpdatePickupTime#execute()} method to invoke the remote operation.
     *
     * @param orderID
     * @param dateTime
     * @return the request
     */
    public UpdatePickupTime updatePickupTime(java.lang.Integer orderID, java.lang.String dateTime) throws java.io.IOException {
      UpdatePickupTime result = new UpdatePickupTime(orderID, dateTime);
      initialize(result);
      return result;
    }

    public class UpdatePickupTime extends LockerHopsAPIRequest<com.lockerhops.backend.lockerHopsAPI.model.MyBean> {

      private static final String REST_PATH = "pickupTimeUpdate/{orderID}/{DateTime}";

      /**
       * Create a request for the method "order.updatePickupTime".
       *
       * This request holds the parameters needed by the the lockerHopsAPI server.  After setting any
       * optional parameters, call the {@link UpdatePickupTime#execute()} method to invoke the remote
       * operation. <p> {@link UpdatePickupTime#initialize(com.google.api.client.googleapis.services.Abs
       * tractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @param orderID
       * @param dateTime
       * @since 1.13
       */
      protected UpdatePickupTime(java.lang.Integer orderID, java.lang.String dateTime) {
        super(LockerHopsAPI.this, "POST", REST_PATH, null, com.lockerhops.backend.lockerHopsAPI.model.MyBean.class);
        this.orderID = com.google.api.client.util.Preconditions.checkNotNull(orderID, "Required parameter orderID must be specified.");
        this.dateTime = com.google.api.client.util.Preconditions.checkNotNull(dateTime, "Required parameter dateTime must be specified.");
      }

      @Override
      public UpdatePickupTime setAlt(java.lang.String alt) {
        return (UpdatePickupTime) super.setAlt(alt);
      }

      @Override
      public UpdatePickupTime setFields(java.lang.String fields) {
        return (UpdatePickupTime) super.setFields(fields);
      }

      @Override
      public UpdatePickupTime setKey(java.lang.String key) {
        return (UpdatePickupTime) super.setKey(key);
      }

      @Override
      public UpdatePickupTime setOauthToken(java.lang.String oauthToken) {
        return (UpdatePickupTime) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdatePickupTime setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdatePickupTime) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdatePickupTime setQuotaUser(java.lang.String quotaUser) {
        return (UpdatePickupTime) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdatePickupTime setUserIp(java.lang.String userIp) {
        return (UpdatePickupTime) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer orderID;

      /**

       */
      public java.lang.Integer getOrderID() {
        return orderID;
      }

      public UpdatePickupTime setOrderID(java.lang.Integer orderID) {
        this.orderID = orderID;
        return this;
      }

      @com.google.api.client.util.Key("DateTime")
      private java.lang.String dateTime;

      /**

       */
      public java.lang.String getDateTime() {
        return dateTime;
      }

      public UpdatePickupTime setDateTime(java.lang.String dateTime) {
        this.dateTime = dateTime;
        return this;
      }

      @Override
      public UpdatePickupTime set(String parameterName, Object value) {
        return (UpdatePickupTime) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "order.updateTimePlaceInLocker".
     *
     * This request holds the parameters needed by the lockerHopsAPI server.  After setting any optional
     * parameters, call the {@link UpdateTimePlaceInLocker#execute()} method to invoke the remote
     * operation.
     *
     * @param orderID
     * @param dateTime
     * @return the request
     */
    public UpdateTimePlaceInLocker updateTimePlaceInLocker(java.lang.Integer orderID, java.lang.String dateTime) throws java.io.IOException {
      UpdateTimePlaceInLocker result = new UpdateTimePlaceInLocker(orderID, dateTime);
      initialize(result);
      return result;
    }

    public class UpdateTimePlaceInLocker extends LockerHopsAPIRequest<com.lockerhops.backend.lockerHopsAPI.model.MyBean> {

      private static final String REST_PATH = "lockerTimeUpdate/{orderID}/{DateTime}";

      /**
       * Create a request for the method "order.updateTimePlaceInLocker".
       *
       * This request holds the parameters needed by the the lockerHopsAPI server.  After setting any
       * optional parameters, call the {@link UpdateTimePlaceInLocker#execute()} method to invoke the
       * remote operation. <p> {@link UpdateTimePlaceInLocker#initialize(com.google.api.client.googleapi
       * s.services.AbstractGoogleClientRequest)} must be called to initialize this instance immediately
       * after invoking the constructor. </p>
       *
       * @param orderID
       * @param dateTime
       * @since 1.13
       */
      protected UpdateTimePlaceInLocker(java.lang.Integer orderID, java.lang.String dateTime) {
        super(LockerHopsAPI.this, "POST", REST_PATH, null, com.lockerhops.backend.lockerHopsAPI.model.MyBean.class);
        this.orderID = com.google.api.client.util.Preconditions.checkNotNull(orderID, "Required parameter orderID must be specified.");
        this.dateTime = com.google.api.client.util.Preconditions.checkNotNull(dateTime, "Required parameter dateTime must be specified.");
      }

      @Override
      public UpdateTimePlaceInLocker setAlt(java.lang.String alt) {
        return (UpdateTimePlaceInLocker) super.setAlt(alt);
      }

      @Override
      public UpdateTimePlaceInLocker setFields(java.lang.String fields) {
        return (UpdateTimePlaceInLocker) super.setFields(fields);
      }

      @Override
      public UpdateTimePlaceInLocker setKey(java.lang.String key) {
        return (UpdateTimePlaceInLocker) super.setKey(key);
      }

      @Override
      public UpdateTimePlaceInLocker setOauthToken(java.lang.String oauthToken) {
        return (UpdateTimePlaceInLocker) super.setOauthToken(oauthToken);
      }

      @Override
      public UpdateTimePlaceInLocker setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (UpdateTimePlaceInLocker) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public UpdateTimePlaceInLocker setQuotaUser(java.lang.String quotaUser) {
        return (UpdateTimePlaceInLocker) super.setQuotaUser(quotaUser);
      }

      @Override
      public UpdateTimePlaceInLocker setUserIp(java.lang.String userIp) {
        return (UpdateTimePlaceInLocker) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.Integer orderID;

      /**

       */
      public java.lang.Integer getOrderID() {
        return orderID;
      }

      public UpdateTimePlaceInLocker setOrderID(java.lang.Integer orderID) {
        this.orderID = orderID;
        return this;
      }

      @com.google.api.client.util.Key("DateTime")
      private java.lang.String dateTime;

      /**

       */
      public java.lang.String getDateTime() {
        return dateTime;
      }

      public UpdateTimePlaceInLocker setDateTime(java.lang.String dateTime) {
        this.dateTime = dateTime;
        return this;
      }

      @Override
      public UpdateTimePlaceInLocker set(String parameterName, Object value) {
        return (UpdateTimePlaceInLocker) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Restaurant collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code LockerHopsAPI lockerHopsAPI = new LockerHopsAPI(...);}
   *   {@code LockerHopsAPI.Restaurant.List request = lockerHopsAPI.restaurant().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Restaurant restaurant() {
    return new Restaurant();
  }

  /**
   * The "restaurant" collection of methods.
   */
  public class Restaurant {

    /**
     * Create a request for the method "restaurant.addRestaurant".
     *
     * This request holds the parameters needed by the lockerHopsAPI server.  After setting any optional
     * parameters, call the {@link AddRestaurant#execute()} method to invoke the remote operation.
     *
     * @param name
     * @param address
     * @param phone
     * @param website
     * @param type
     * @return the request
     */
    public AddRestaurant addRestaurant(java.lang.String name, java.lang.String address, java.lang.String phone, java.lang.String website, java.lang.String type) throws java.io.IOException {
      AddRestaurant result = new AddRestaurant(name, address, phone, website, type);
      initialize(result);
      return result;
    }

    public class AddRestaurant extends LockerHopsAPIRequest<com.lockerhops.backend.lockerHopsAPI.model.MyBean> {

      private static final String REST_PATH = "restaurantCreate/{name}/{address}/{phone}/{website}/{type}";

      /**
       * Create a request for the method "restaurant.addRestaurant".
       *
       * This request holds the parameters needed by the the lockerHopsAPI server.  After setting any
       * optional parameters, call the {@link AddRestaurant#execute()} method to invoke the remote
       * operation. <p> {@link AddRestaurant#initialize(com.google.api.client.googleapis.services.Abstra
       * ctGoogleClientRequest)} must be called to initialize this instance immediately after invoking
       * the constructor. </p>
       *
       * @param name
       * @param address
       * @param phone
       * @param website
       * @param type
       * @since 1.13
       */
      protected AddRestaurant(java.lang.String name, java.lang.String address, java.lang.String phone, java.lang.String website, java.lang.String type) {
        super(LockerHopsAPI.this, "POST", REST_PATH, null, com.lockerhops.backend.lockerHopsAPI.model.MyBean.class);
        this.name = com.google.api.client.util.Preconditions.checkNotNull(name, "Required parameter name must be specified.");
        this.address = com.google.api.client.util.Preconditions.checkNotNull(address, "Required parameter address must be specified.");
        this.phone = com.google.api.client.util.Preconditions.checkNotNull(phone, "Required parameter phone must be specified.");
        this.website = com.google.api.client.util.Preconditions.checkNotNull(website, "Required parameter website must be specified.");
        this.type = com.google.api.client.util.Preconditions.checkNotNull(type, "Required parameter type must be specified.");
      }

      @Override
      public AddRestaurant setAlt(java.lang.String alt) {
        return (AddRestaurant) super.setAlt(alt);
      }

      @Override
      public AddRestaurant setFields(java.lang.String fields) {
        return (AddRestaurant) super.setFields(fields);
      }

      @Override
      public AddRestaurant setKey(java.lang.String key) {
        return (AddRestaurant) super.setKey(key);
      }

      @Override
      public AddRestaurant setOauthToken(java.lang.String oauthToken) {
        return (AddRestaurant) super.setOauthToken(oauthToken);
      }

      @Override
      public AddRestaurant setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (AddRestaurant) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public AddRestaurant setQuotaUser(java.lang.String quotaUser) {
        return (AddRestaurant) super.setQuotaUser(quotaUser);
      }

      @Override
      public AddRestaurant setUserIp(java.lang.String userIp) {
        return (AddRestaurant) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String name;

      /**

       */
      public java.lang.String getName() {
        return name;
      }

      public AddRestaurant setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String address;

      /**

       */
      public java.lang.String getAddress() {
        return address;
      }

      public AddRestaurant setAddress(java.lang.String address) {
        this.address = address;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String phone;

      /**

       */
      public java.lang.String getPhone() {
        return phone;
      }

      public AddRestaurant setPhone(java.lang.String phone) {
        this.phone = phone;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String website;

      /**

       */
      public java.lang.String getWebsite() {
        return website;
      }

      public AddRestaurant setWebsite(java.lang.String website) {
        this.website = website;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String type;

      /**

       */
      public java.lang.String getType() {
        return type;
      }

      public AddRestaurant setType(java.lang.String type) {
        this.type = type;
        return this;
      }

      @Override
      public AddRestaurant set(String parameterName, Object value) {
        return (AddRestaurant) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "restaurant.getAllRestaurants".
     *
     * This request holds the parameters needed by the lockerHopsAPI server.  After setting any optional
     * parameters, call the {@link GetAllRestaurants#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public GetAllRestaurants getAllRestaurants() throws java.io.IOException {
      GetAllRestaurants result = new GetAllRestaurants();
      initialize(result);
      return result;
    }

    public class GetAllRestaurants extends LockerHopsAPIRequest<com.lockerhops.backend.lockerHopsAPI.model.RestaurantCollection> {

      private static final String REST_PATH = "restaurantcollection";

      /**
       * Create a request for the method "restaurant.getAllRestaurants".
       *
       * This request holds the parameters needed by the the lockerHopsAPI server.  After setting any
       * optional parameters, call the {@link GetAllRestaurants#execute()} method to invoke the remote
       * operation. <p> {@link GetAllRestaurants#initialize(com.google.api.client.googleapis.services.Ab
       * stractGoogleClientRequest)} must be called to initialize this instance immediately after
       * invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected GetAllRestaurants() {
        super(LockerHopsAPI.this, "GET", REST_PATH, null, com.lockerhops.backend.lockerHopsAPI.model.RestaurantCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public GetAllRestaurants setAlt(java.lang.String alt) {
        return (GetAllRestaurants) super.setAlt(alt);
      }

      @Override
      public GetAllRestaurants setFields(java.lang.String fields) {
        return (GetAllRestaurants) super.setFields(fields);
      }

      @Override
      public GetAllRestaurants setKey(java.lang.String key) {
        return (GetAllRestaurants) super.setKey(key);
      }

      @Override
      public GetAllRestaurants setOauthToken(java.lang.String oauthToken) {
        return (GetAllRestaurants) super.setOauthToken(oauthToken);
      }

      @Override
      public GetAllRestaurants setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (GetAllRestaurants) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public GetAllRestaurants setQuotaUser(java.lang.String quotaUser) {
        return (GetAllRestaurants) super.setQuotaUser(quotaUser);
      }

      @Override
      public GetAllRestaurants setUserIp(java.lang.String userIp) {
        return (GetAllRestaurants) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String website;

      /**

       */
      public java.lang.String getWebsite() {
        return website;
      }

      public GetAllRestaurants setWebsite(java.lang.String website) {
        this.website = website;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String phone;

      /**

       */
      public java.lang.String getPhone() {
        return phone;
      }

      public GetAllRestaurants setPhone(java.lang.String phone) {
        this.phone = phone;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String type;

      /**

       */
      public java.lang.String getType() {
        return type;
      }

      public GetAllRestaurants setType(java.lang.String type) {
        this.type = type;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String name;

      /**

       */
      public java.lang.String getName() {
        return name;
      }

      public GetAllRestaurants setName(java.lang.String name) {
        this.name = name;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String address;

      /**

       */
      public java.lang.String getAddress() {
        return address;
      }

      public GetAllRestaurants setAddress(java.lang.String address) {
        this.address = address;
        return this;
      }

      @Override
      public GetAllRestaurants set(String parameterName, Object value) {
        return (GetAllRestaurants) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link LockerHopsAPI}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link LockerHopsAPI}. */
    @Override
    public LockerHopsAPI build() {
      return new LockerHopsAPI(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link LockerHopsAPIRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setLockerHopsAPIRequestInitializer(
        LockerHopsAPIRequestInitializer lockerhopsapiRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(lockerhopsapiRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
