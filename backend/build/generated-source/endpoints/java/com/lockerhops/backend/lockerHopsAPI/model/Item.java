/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://github.com/google/apis-client-generator/
 * (build: 2016-02-18 22:11:37 UTC)
 * on 2016-03-18 at 19:08:08 UTC 
 * Modify at your own risk.
 */

package com.lockerhops.backend.lockerHopsAPI.model;

/**
 * Model definition for Item.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the lockerHopsAPI. For a detailed explanation see:
 * <a href="https://developers.google.com/api-client-library/java/google-http-java-client/json">https://developers.google.com/api-client-library/java/google-http-java-client/json</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Item extends com.google.api.client.json.GenericJson {

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String category;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Double cost;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String description;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean glutenFree;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<java.lang.String> ingredients;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String item;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String restaurant;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.util.List<Item> restaurantItems;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.String subCategory;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean vegan;

  /**
   * The value may be {@code null}.
   */
  @com.google.api.client.util.Key
  private java.lang.Boolean vegetarian;

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getCategory() {
    return category;
  }

  /**
   * @param category category or {@code null} for none
   */
  public Item setCategory(java.lang.String category) {
    this.category = category;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Double getCost() {
    return cost;
  }

  /**
   * @param cost cost or {@code null} for none
   */
  public Item setCost(java.lang.Double cost) {
    this.cost = cost;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getDescription() {
    return description;
  }

  /**
   * @param description description or {@code null} for none
   */
  public Item setDescription(java.lang.String description) {
    this.description = description;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getGlutenFree() {
    return glutenFree;
  }

  /**
   * @param glutenFree glutenFree or {@code null} for none
   */
  public Item setGlutenFree(java.lang.Boolean glutenFree) {
    this.glutenFree = glutenFree;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<java.lang.String> getIngredients() {
    return ingredients;
  }

  /**
   * @param ingredients ingredients or {@code null} for none
   */
  public Item setIngredients(java.util.List<java.lang.String> ingredients) {
    this.ingredients = ingredients;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getItem() {
    return item;
  }

  /**
   * @param item item or {@code null} for none
   */
  public Item setItem(java.lang.String item) {
    this.item = item;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getRestaurant() {
    return restaurant;
  }

  /**
   * @param restaurant restaurant or {@code null} for none
   */
  public Item setRestaurant(java.lang.String restaurant) {
    this.restaurant = restaurant;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.util.List<Item> getRestaurantItems() {
    return restaurantItems;
  }

  /**
   * @param restaurantItems restaurantItems or {@code null} for none
   */
  public Item setRestaurantItems(java.util.List<Item> restaurantItems) {
    this.restaurantItems = restaurantItems;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.String getSubCategory() {
    return subCategory;
  }

  /**
   * @param subCategory subCategory or {@code null} for none
   */
  public Item setSubCategory(java.lang.String subCategory) {
    this.subCategory = subCategory;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVegan() {
    return vegan;
  }

  /**
   * @param vegan vegan or {@code null} for none
   */
  public Item setVegan(java.lang.Boolean vegan) {
    this.vegan = vegan;
    return this;
  }

  /**
   * @return value or {@code null} for none
   */
  public java.lang.Boolean getVegetarian() {
    return vegetarian;
  }

  /**
   * @param vegetarian vegetarian or {@code null} for none
   */
  public Item setVegetarian(java.lang.Boolean vegetarian) {
    this.vegetarian = vegetarian;
    return this;
  }

  @Override
  public Item set(String fieldName, Object value) {
    return (Item) super.set(fieldName, value);
  }

  @Override
  public Item clone() {
    return (Item) super.clone();
  }

}
